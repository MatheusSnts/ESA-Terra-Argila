@model ESA_Terra_Argila.Models.AdminDashboardViewModel

@{
    ViewData["Title"] = "Dashboard Administrador";
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

<h2 class="my-4">Dashboard do Administrador</h2>

<!-- Botão para alternar entre cartões e gráfico -->
<div class="d-flex justify-content-end mb-3">
    <button id="toggleViewBtn" class="btn btn-outline-primary">Ver em gráfico</button>
</div>

<!-- Vista de Cartões -->
<div id="cardView">
    <div class="row g-3">
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Total de Utilizadores</h6>
                <h4>@Model.TotalUsers</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Aprovados</h6>
                <h4>@Model.ApprovedUsers</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Produtos Ativos</h6>
                <h4>@Model.TotalProducts</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Materiais Ativos</h6>
                <h4>@Model.TotalMaterials</h4>
            </div>
        </div>
    </div>

    <hr />

    <div class="row g-3">
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Únicos (24h)</h6>
                <h4>@Model.UniqueUsers24h</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Únicos (7d)</h6>
                <h4>@Model.UniqueUsers7d</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Únicos (Mês)</h6>
                <h4>@Model.UniqueUsersMonth</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Únicos (Ano)</h6>
                <h4>@Model.UniqueUsersYear</h4>
            </div>
        </div>
    </div>

    <hr />

    <div class="row g-3">
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Utilizadores Únicos (Total)</h6>
                <h4>@Model.UniqueUsersTotal</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Acessos (24h)</h6>
                <h4>@Model.ActiveUsers24h</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Acessos (7d)</h6>
                <h4>@Model.ActiveUsers7d</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Acessos (Mês)</h6>
                <h4>@Model.ActiveUsersMonth</h4>
            </div>
        </div>
    </div>

    <hr />
    <div class="row g-3">
        <div class="col-md-3">
            <div class="card shadow p-3 bg-light">
                <h6>Total de Acessos</h6>
                <h4>@Model.ActiveUsersTotal</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card shadow p-3">
                <h6>Total de Encomendas</h6>
                <h4>@Model.TotalOrders</h4>
            </div>
        </div>
    </div>
</div>

<!-- Vista de Gráfico -->
<div id="chartView" style="display: none;">
    <h4>Gráfico de Atividade</h4>
    <div class="d-flex gap-2 mb-3">
        <button class="btn btn-sm btn-outline-secondary filter-btn" data-range="24h">24h</button>
        <button class="btn btn-sm btn-outline-secondary filter-btn" data-range="7d">7 dias</button>
        <button class="btn btn-sm btn-outline-secondary filter-btn" data-range="month">Mês</button>
        <button class="btn btn-sm btn-outline-secondary filter-btn" data-range="year">Ano</button>
        <button class="btn btn-sm btn-outline-secondary filter-btn" data-range="total">Total</button>
    </div>
    <div class="chart-container rounded shadow mb-4">
        <canvas class="chart rounded" id="activityChart"></canvas>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const btn = document.getElementById("toggleViewBtn");
        const cardView = document.getElementById("cardView");
        const chartView = document.getElementById("chartView");

        const ctx = document.getElementById('activityChart').getContext('2d');
        const chart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: [{
                    label: 'Acessos',
                    data: [],
                    borderWidth: 2,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    tension: 0.3,
                    fill: true,
                    pointRadius: 5,
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });

       
        btn.addEventListener("click", () => {
            const showingCards = cardView.style.display !== "none";
            cardView.style.display = showingCards ? "none" : "block";
            chartView.style.display = showingCards ? "block" : "none";
            btn.textContent = showingCards ? "Ver em cartões" : "Ver em gráfico";

            if (!showingCards) {
                chart.resize();
            }
        });

        
        async function fetchAndUpdateChart(range) {
            try {
                const response = await fetch(`/Admin/GetActivityData?range=${range}`);
                const data = await response.json();

                chart.data.labels = data.map(d => d.label);
                chart.data.datasets[0].data = data.map(d => d.count); 
                chart.update();
            } catch (error) {
                console.error("Erro ao buscar dados:", error);
            }
        }

        
        fetchAndUpdateChart("24h");

       
        document.querySelectorAll('.filter-btn').forEach(btn =>
            btn.addEventListener('click', () => {
                const range = btn.getAttribute("data-range");
                fetchAndUpdateChart(range);
            })
        );
    </script>
}


}
