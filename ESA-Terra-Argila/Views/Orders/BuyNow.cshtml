@model ESA_Terra_Argila.Models.Order
@{
    ViewData["Title"] = "Carrinho de compras";
}
<style>
    .cart-image {
        width: 5rem;
        height: 5rem;
    }
</style>

<div class="container">
    <div class="col-md-12 my-3">
        <h2> </h2>
    </div>
    <div class="d-flex gap-4">
        <div class="col-md-7 d-flex flex-column justify-content-between">
            <div style="height: 27rem;" class="col-md-12 overflow-auto">
                @if (Model?.OrderItems != null && Model.OrderItems.Count > 0)
                {
                    @foreach (OrderItem item in Model.OrderItems)
                    {
                        string category = item.Item.Category?.Name ?? "Sem categoria";
                        <div data-id="@item.Id" class="col-md-12 d-flex border-bottom pb-2 mb-2 justify-content-between align-items-center cart-item">
                            <div class="d-flex align-items-center gap-2">
                                <div class="cart-image">
                                    <img src="@item.Item.Images.FirstOrDefault()?.Path" alt="Item">
                                </div>
                                <div>
                                    <p class="fw-bold mb-0">@item.Item.Name</p>
                                    <p class="mb-0">@category</p>
                                </div>
                            </div>
                            <div class="d-flex gap-2 align-items-center">
                                <svg onclick="removeCartItemQuantity(event)" class="cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" width="30" height="30" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="size-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M5 12h14" />
                                </svg>
                                <span style="font-size: 16px;" class="stock-badge fw-bold quantity rounded">@item.Quantity</span>
                                <svg onclick="addCartItemQuantity(event)" class="cursor-pointer" xmlns="http://www.w3.org/2000/svg" fill="none" width="30" height="30" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" class="size-6">
                                    <path stroke-linecap="round" stroke-linejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
                                </svg>
                            </div>
                            <div class="d-flex align-items-center">
                                <div style="font-size: 20px;" class="fw-bold mb-0 partial">@item.GetTotal().ToString("C", new System.Globalization.CultureInfo("pt-PT"))</div>
                            </div>

                        </div>
                    }
                }

            </div>
            <div style="height: 2rem; font-size: 20px;" class="col-md-12 fw-bold total text-end">
                Total: @Model?.GetTotal().ToString("C", new System.Globalization.CultureInfo("pt-PT"))
            </div>

            <div class="mt-4 text-end">
                <div class="mt-4 text-end">
                    <button type="button" class="btn btn-primary" onclick="iniciarPagamento(event, @Model.Id)">Finalizar Compra</button>
                </div>
            </div>



        </div>

    </div>
    




</div>

<script>
    function iniciarPagamento(e, orderId) {
        if(e) {
            e.preventDefault();
        }

        fetch('/api/pagamento/checkout/' + orderId, {
            method: 'POST'
        })
        .then(async response => {
            if (!response.ok) {
                const data = await response.json();
                alert(data.message); 
                return; 
            }

            const data = await response.json();
            if (data.url) {
                window.location.href = data.url; 
            }
        })
        .catch(error => console.error('Erro no fetch:', error));
    }
</script>






